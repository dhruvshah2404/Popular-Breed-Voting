{"version":3,"sources":["Header.jsx","EachImage.jsx","User.jsx","ContenOfEachBreed.jsx","EachBreed.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","state","Fragment","Component","EachImage","props","className","src","image","alt","User","url","userImage","ContentOfEachBreed","onClick","updateVote","content","id","this","votes","href","info","target","breedName","subBreedName","EachBreed","items","map","item","key","dogImage","changeVote","App","Objid","newArray","e","sort","a","b","setState","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sOAaeA,E,2MAVbC,MAAQ,G,wEAEN,OACE,kBAAC,IAAMC,SAAP,KACE,uD,GALaC,aCkBNC,MAXf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,aACb,yBACEC,IAAKF,EAAMG,MACXC,IAAI,iBCFGC,MAVf,SAAcL,GAEV,OAAO,yBAAKC,UAAU,QACpB,4CAGA,yBAAKA,UAAU,YAAYC,IAAKF,EAAMM,IAAIC,UAAWH,IAAI,gBCchDI,E,YAlBb,WAAYR,GAAQ,qEACZA,I,sEAGE,IAAD,OACP,OACE,yBAAKC,UAAU,sBACb,4BAAQQ,QAAS,kBAAM,EAAKT,MAAMU,WAAW,EAAKV,MAAMW,QAAQC,MAC9D,uBAAGX,UAAU,qBAEf,wBAAIA,UAAU,SAASY,KAAKb,MAAMW,QAAQG,OAC1C,uBAAGb,UAAU,aAAY,uBAAGc,KAAMF,KAAKb,MAAMW,QAAQK,KAAMC,OAAO,UAAUJ,KAAKb,MAAMW,QAAQO,YAC/F,uBAAGjB,UAAU,gBAAgBY,KAAKb,MAAMW,QAAQQ,cAChD,kBAAC,EAAD,CAAMb,IAAKO,KAAKb,MAAMW,e,GAdGb,aCyBlBsB,E,YAvBb,WAAYpB,GAAQ,qEACZA,I,sEAGE,IAAD,OACP,OACE,kBAAC,IAAMH,SAAP,KACGgB,KAAKb,MAAMqB,MAAMC,KAAI,SAAAC,GACpB,OACE,yBAAKtB,UAAU,YAAYuB,IAAKD,EAAKX,IACnC,kBAAC,EAAD,CAAWT,MAAOoB,EAAKE,WACvB,kBAAC,EAAD,CACEd,QAASY,EACTb,WAAY,EAAKV,MAAM0B,sB,GAdf5B,a,OCmCT6B,G,kBAhCb,WAAY3B,GAAQ,IAAD,8BACjB,4CAAMA,KAORU,WAAa,SAAAkB,GACX,IAAMC,EAAW,EAAKjC,MAAMyB,MACzBC,KAAI,SAAAQ,GAIH,OAHIA,EAAElB,KAAOgB,IACXE,EAAEhB,OAAS,GAENgB,KAERC,MAAK,SAACC,EAAGC,GACR,OAAOA,EAAEnB,MAAQkB,EAAElB,SAEvB,EAAKoB,SAAS,CAAEb,MAAOQ,KAjBvB,EAAKjC,MAAQ,CACXyB,MAAOc,GAHQ,E,sEAuBjB,OACE,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWd,MAAOR,KAAKjB,MAAMyB,MAAOK,WAAYb,KAAKH,kB,GA3B3CZ,cCLEsC,QACW,cAA7BC,OAAOC,SAASC,UACe,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MACvB,2DCANC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4F3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.5e925895.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  state = {  }\r\n  render() { \r\n    return ( \r\n      <React.Fragment>\r\n        <h1>Popular Dog Breeds</h1>\r\n      </React.Fragment>\r\n     );\r\n  }\r\n}\r\n \r\nexport default Header;","import React from \"react\";\r\n// {\r\n//   fetch('https://dog.ceo/api/breed/husky/images/random')\r\n//     .then((res) => {\r\n//       return res.json();\r\n//     }).then(( function(data) {\r\n//       EachImage(data)\r\n//     }))\r\n// }\r\nfunction EachImage(props) {  \r\n  return (\r\n    <div className=\"eachImage\">\r\n      <img\r\n        src={props.image}\r\n        alt=\"BreedImage\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EachImage;\r\n","import React from 'react';\r\n\r\nfunction User(props){\r\n  \r\n    return <div className=\"user\">\r\n      <p>\r\n        Submitted by:\r\n      </p>\r\n      <img className=\"userImage\" src={props.url.userImage} alt=\"userImage\"></img>\r\n    </div> ;\r\n}\r\n \r\nexport default User;","import React, { Component } from \"react\";\r\nimport User from \"./User\";\r\n\r\nclass ContentOfEachBreed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contentOfEachBreed\">\r\n        <button onClick={() => this.props.updateVote(this.props.content.id)}>\r\n          <i className=\"fas fa-arrow-up\"></i>\r\n        </button>\r\n        <h4 className=\"votes\">{this.props.content.votes}</h4>\r\n        <p className=\"breedName\"><a href={this.props.content.info} target=\"_blank\">{this.props.content.breedName}</a></p>\r\n        <p className=\"subBreedName\">{this.props.content.subBreedName}</p>\r\n        <User url={this.props.content}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ContentOfEachBreed;\r\n","import React, { Component } from \"react\";\r\nimport EachImage from \"./EachImage\";\r\nimport ContentOfEachBreed from \"./ContenOfEachBreed\";\r\n\r\nclass EachBreed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.items.map(item => {\r\n          return (\r\n            <div className=\"eachBreed\" key={item.id}>\r\n              <EachImage image={item.dogImage} />\r\n              <ContentOfEachBreed\r\n                content={item}\r\n                updateVote={this.props.changeVote}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachBreed;\r\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport EachBreed from \"./EachBreed\";\nimport data from \"./Data.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: data\n    };\n  }\n\n  //Lifting the state explained by antony\n  updateVote = Objid => {\n    const newArray = this.state.items\n      .map(e => {\n        if (e.id === Objid) {\n          e.votes += 1;\n        }\n        return e;\n      })\n      .sort((a, b) => {\n        return b.votes - a.votes;\n      });\n    this.setState({ items: newArray });\n  };\n\n  render() {\n    return (\n      <main>\n        <Header />\n        <EachBreed items={this.state.items} changeVote={this.updateVote} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n     \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}